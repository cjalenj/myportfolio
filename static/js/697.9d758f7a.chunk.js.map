{"version":3,"file":"static/js/697.9d758f7a.chunk.js","mappings":"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","sources":["components/Header.jsx","components/Skills.jsx","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState, useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport { Container, Badge } from 'react-bootstrap'; // Import Badge\nimport { ThemeContext } from 'styled-components'; // Import ThemeContext\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  iconStyle: {\n    height: 75,\n    width: 75,\n    margin: 10,\n    marginBottom: 0,\n  },\n  introTextContainer: {\n    whiteSpace: 'pre-wrap',\n  },\n};\n\nfunction Skills(props) {\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const theme = useContext(ThemeContext); // Get theme from context\n\n  const renderSkillsIntro = (intro) => (\n    <h4 style={styles.introTextContainer}>\n      <ReactMarkdown children={intro} />\n    </h4>\n  );\n\n  useEffect(() => {\n    fetch(endpoints.skills, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div className=\"section-content-container\">\n            <Container style={{ paddingBottom: '100px' }}>\n              {renderSkillsIntro(data.intro)}\n              {data.skills?.map((rows) => (\n                <div key={rows.title}>\n                  <br />\n                  <h3>{rows.title}</h3>\n                  {typeof rows.items[0] === 'object' ? (\n                    // Render icon-based skills\n                    rows.items.map((item) => (\n                      <div key={item.title} style={{ display: 'inline-block' }}>\n                        <img style={styles.iconStyle} src={item.icon} alt={item.title} />\n                        <p>{item.title}</p>\n                      </div>\n                    ))\n                  ) : (\n                    // Render text-based skills as badges\n                    <div>\n                      {rows.items.map((item) => (\n                        <Badge\n                          key={item}\n                          pill\n                          bg={theme.bsSecondaryVariant} // Use theme colors\n                          text={theme.bsPrimaryVariant}\n                          style={{\n                            paddingLeft: 10,\n                            paddingRight: 10,\n                            paddingTop: 5,\n                            paddingBottom: 5,\n                            margin: 5,\n                          }}\n                        >\n                          {item}\n                        </Badge>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner />}\n    </>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;"],"names":["props","title","_jsx","className","children","styles","iconStyle","height","width","margin","marginBottom","introTextContainer","whiteSpace","_data$skills","header","data","setData","useState","theme","useContext","ThemeContext","useEffect","fetch","endpoints","skills","method","then","res","json","catch","err","_jsxs","_Fragment","Header","Fade","Container","style","paddingBottom","intro","ReactMarkdown","map","rows","items","item","display","src","icon","alt","Badge","pill","bg","bsSecondaryVariant","text","bsPrimaryVariant","paddingLeft","paddingRight","paddingTop","FallbackSpinner","_excluded","React","_ref","ref","bsPrefix","as","Component","_objectWithoutProperties","prefix","useBootstrapPrefix","_objectSpread","classNames","concat","displayName"],"sourceRoot":""}